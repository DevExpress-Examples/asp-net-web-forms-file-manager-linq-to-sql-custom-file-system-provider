#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FmExampleDb")]
public partial class DbFileSystemDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertDbFileSystemItem(DbFileSystemItem instance);
  partial void UpdateDbFileSystemItem(DbFileSystemItem instance);
  partial void DeleteDbFileSystemItem(DbFileSystemItem instance);
  #endregion
	
	public DbFileSystemDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FmExampleDbConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DbFileSystemDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DbFileSystemDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DbFileSystemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DbFileSystemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<DbFileSystemItem> DbFileSystemItems
	{
		get
		{
			return this.GetTable<DbFileSystemItem>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileSystem")]
public partial class DbFileSystemItem : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private bool _IsFolder;
	
	private int _ParentId;
	
	private System.Data.Linq.Link<System.Data.Linq.Binary> _Data;
	
	private System.Nullable<System.DateTime> _LastWriteTime;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsFolderChanging(bool value);
    partial void OnIsFolderChanged();
    partial void OnParentIdChanging(int value);
    partial void OnParentIdChanged();
    partial void OnDataChanging(System.Data.Linq.Binary value);
    partial void OnDataChanged();
    partial void OnLastWriteTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastWriteTimeChanged();
    #endregion
	
	public DbFileSystemItem()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFolder", DbType="Bit NOT NULL")]
	public bool IsFolder
	{
		get
		{
			return this._IsFolder;
		}
		set
		{
			if ((this._IsFolder != value))
			{
				this.OnIsFolderChanging(value);
				this.SendPropertyChanging();
				this._IsFolder = value;
				this.SendPropertyChanged("IsFolder");
				this.OnIsFolderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int NOT NULL")]
	public int ParentId
	{
		get
		{
			return this._ParentId;
		}
		set
		{
			if ((this._ParentId != value))
			{
				this.OnParentIdChanging(value);
				this.SendPropertyChanging();
				this._ParentId = value;
				this.SendPropertyChanged("ParentId");
				this.OnParentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary Data
	{
		get
		{
			return this._Data.Value;
		}
		set
		{
			if ((this._Data.Value != value))
			{
				this.OnDataChanging(value);
				this.SendPropertyChanging();
				this._Data.Value = value;
				this.SendPropertyChanged("Data");
				this.OnDataChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastWriteTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> LastWriteTime
	{
		get
		{
			return this._LastWriteTime;
		}
		set
		{
			if ((this._LastWriteTime != value))
			{
				this.OnLastWriteTimeChanging(value);
				this.SendPropertyChanging();
				this._LastWriteTime = value;
				this.SendPropertyChanged("LastWriteTime");
				this.OnLastWriteTimeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
